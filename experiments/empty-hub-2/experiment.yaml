apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  creationTimestamp: null
  labels:
    infra_id: c492e04c-a627-4588-992d-204746bf66ab
    revision_id: 1d7ed5b8-5a98-45ce-9626-6e72502fe09f
    subject: aws-lambda-function-layer-detach_litmus
  name: empty-hub-2
  namespace: hce
spec:
  arguments:
    parameters:
    - name: adminModeNamespace
      value: hce
  entrypoint: custom-chaos
  podGC:
    strategy: OnWorkflowCompletion
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: argo-chaos
  templates:
  - inputs: {}
    metadata: {}
    name: custom-chaos
    outputs: {}
    steps:
    - - arguments: {}
        name: install-chaos-faults
        template: install-chaos-faults
    - - arguments: {}
        name: lambda-function-layer-detach-mgk
        template: lambda-function-layer-detach-mgk
    - - arguments: {}
        name: cleanup-chaos-resources
        template: cleanup-chaos-resources
  - container:
      args:
      - kubectl apply -f /tmp/lambda-function-layer-detach-mgk.yaml -n {{workflow.parameters.adminModeNamespace}}
        && sleep 30
      command:
      - sh
      - -c
      image: docker.io/chaosnative/k8s:2.13.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: lambda-function-layer-detach-mgk
        path: /tmp/lambda-function-layer-detach-mgk.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            description:
              message: |
                Detach the lambda layer from function for a certain chaos duration.
            kind: ChaosExperiment
            metadata:
              name: lambda-function-layer-detach
              labels:
                name: lambda-function-layer-detach
                app.kubernetes.io/part-of: litmus
                app.kubernetes.io/component: chaosexperiment
                app.kubernetes.io/version: ci
            spec:
              definition:
                scope: Cluster
                permissions:
                  - apiGroups:
                      - ""
                    resources:
                      - pods
                    verbs:
                      - create
                      - delete
                      - get
                      - list
                      - patch
                      - update
                      - deletecollection
                  - apiGroups:
                      - ""
                    resources:
                      - events
                    verbs:
                      - create
                      - get
                      - list
                      - patch
                      - update
                  - apiGroups:
                      - ""
                    resources:
                      - secrets
                      - configmaps
                    verbs:
                      - get
                      - list
                  - apiGroups:
                      - ""
                    resources:
                      - pods/log
                    verbs:
                      - get
                      - list
                      - watch
                  - apiGroups:
                      - ""
                    resources:
                      - pods/exec
                    verbs:
                      - get
                      - list
                      - create
                  - apiGroups:
                      - batch
                    resources:
                      - jobs
                    verbs:
                      - create
                      - list
                      - get
                      - delete
                      - deletecollection
                  - apiGroups:
                      - litmuschaos.io
                    resources:
                      - chaosengines
                      - chaosexperiments
                      - chaosresults
                    verbs:
                      - create
                      - list
                      - get
                      - patch
                      - update
                      - delete
                  - apiGroups:
                      - ""
                    resources:
                      - nodes
                    verbs:
                      - get
                      - list
                image: uditgaurav/go-runner:layer
                imagePullPolicy: Always
                args:
                  - -c
                  - ./experiments -name lambda-function-layer-detach
                command:
                  - /bin/bash
                env:
                - name: TOTAL_CHAOS_DURATION
                  value: '30'
                - name: CHAOS_INTERVAL
                  value: '30'
                - name: RAMP_TIME
                  value: ''
                - name: FUNCTION_NAME
                  value: 'python-test-2'
                - name: FUNCTION_LAMBDA_LAYER_ARN
                  value: 'arn:aws:lambda:us-east-2:149554801296:layer:l-2:1'
                - name: REGION
                  value: 'us-east-2'
                - name: SEQUENCE
                  value: 'parallel'
                - name: AWS_SHARED_CREDENTIALS_FILE
                  value: '/tmp/cloud_config.yml'
                # only litmus supported
                - name: LIB
                  value: 'litmus'
                labels:
                  name: lambda-function-layer-detach
                  app.kubernetes.io/part-of: litmus
                  app.kubernetes.io/component: experiment-job
                  app.kubernetes.io/version: ci
                secrets:
                  - name: cloud-secret
                    mountPath: /tmp/
    metadata: {}
    name: install-chaos-faults
    outputs: {}
  - container:
      args:
      - -file=/tmp/chaosengine-lambda-function-layer-detach-mgk.yaml
      - -saveName=/tmp/engine-name
      image: docker.io/chaosnative/litmus-checker:2.13.0
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: lambda-function-layer-detach-mgk
        path: /tmp/chaosengine-lambda-function-layer-detach-mgk.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            kind: ChaosEngine
            metadata:
              namespace: "{{workflow.parameters.adminModeNamespace}}"
              generateName: lambda-function-layer-detach-mgk
              labels:
                instance_id: 3b589183-7d6f-402c-835c-6a0638c00b96
                workflow_name: aws-lambda-function-layer-detach-1658947438214-89t
                workflow_run_id: "{{ workflow.uid }}"
            spec:
              engineState: active
              chaosServiceAccount: litmus-admin
              experiments:
                - name: lambda-function-layer-detach
                  spec:
                    components:
                      env:
                        - name: TOTAL_CHAOS_DURATION
                          value: "30"
                        - name: CHAOS_INTERVAL
                          value: "30"
                        - name: FUNCTION_NAME
                          value: python-test-2
                        - name: FUNCTION_LAMBDA_LAYER_ARN
                          value: arn:aws:lambda:us-east-2:149554801296:layer:l-2:1
                        - name: REGION
                          value: us-east-2
                        - name: SEQUENCE
                          value: parallel
                    probe:
                      - name: healthcheck
                        type: cmdProbe
                        mode: Edge
                        runProperties:
                          probeTimeout: 10
                          retry: 0
                          interval: 1
                          stopOnFailure: true
                        cmdProbe/inputs:
                          command: ./healthcheck -name lambda-update-function
                          source:
                            image: uditgaurav/go-runner:layer
                            inheritInputs: true
                          comparator:
                            type: string
                            criteria: contains
                            value: "[P000]"
    metadata:
      labels:
        weight: "10"
    name: lambda-function-layer-detach-mgk
    outputs: {}
  - container:
      args:
      - kubectl delete chaosengine -l workflow_run_id={{workflow.uid}} -n {{workflow.parameters.adminModeNamespace}}
      command:
      - sh
      - -c
      image: docker.io/chaosnative/k8s:2.13.0
      name: ""
      resources: {}
    inputs: {}
    metadata: {}
    name: cleanup-chaos-resources
    outputs: {}
status:
  finishedAt: null
  startedAt: null
